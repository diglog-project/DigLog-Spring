name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:

    runs-on: ubuntu-24.04
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'corretto'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Mask Secrets
      run: |
        echo "::add-mask::${{ secrets.APPLICATION_SECRET_YML }}"
        echo "::add-mask::${{ secrets.APPLICATION_PROD_SECRET_YML }}"
        echo "::add-mask::${{ secrets.APPLICATION_TEST_SECRET_YML }}"

    - name: Write Application.yml
      run: |
        mkdir -p ./src/main/resources
        echo "${{ secrets.APPLICATION_SECRET_YML }}" > ./src/main/resources/application.yml
        echo "${{ secrets.APPLICATION_PROD_SECRET_YML }}" > ./src/main/resources/application-prod.yml
        echo "${{ secrets.APPLICATION_TEST_SECRET_YML }}" > ./src/main/resources/application-test.yml

    - name: Build jar
      run: ./gradlew bootJar -x test

    - name: Run Tests
      run: SPRING_PROFILES_ACTIVE=test ./gradlew test

    - name: Login DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/diglog-docker-repo:latest .

    - name: Push Docker Image to DockerHub
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/diglog-docker-repo:latest

    - name: Clean up secrets file
      if: always()
      run: |
        rm -f ./src/main/resources/application.yml
        rm -f ./src/main/resources/application-prod.yml
        rm -f ./src/main/resources/application-test.yml

  deploy:
    runs-on: [self-hosted, diglog-backend]
    needs: build-and-push
    steps:
      - name: Run deploy script
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: sh /home/ubuntu/deploy.sh
